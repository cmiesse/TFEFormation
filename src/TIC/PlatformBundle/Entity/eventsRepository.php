<?php

namespace TIC\PlatformBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * eventsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class eventsRepository extends EntityRepository
{
    /**
     * @return \Tic\PlatformBundle\Entity\events
     */
    public function findAllWithAll()
    {
        $qb = $this->createQueryBuilder('e')
            ->leftJoin('e.session', 's')
            ->addSelect('s')
            ->leftJoin('e.trainer', 't')
            ->addSelect('t');

        return $qb->getQuery()->getResult();
    }

    /**
     * @param null $session
     * @return events[]
     */
    public function findForPlanning($session = null)
    {
        $qb = $this->createQueryBuilder('e')
            ->leftJoin('e.trainer', 't')
            ->addSelect('t');

        if ($session !== null) {
            $qb->where('e.session = :session')
                ->setParameter('session', $session);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * @param $sessionID
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findCountForSession($sessionID)
    {
        $request = 'SELECT COUNT(e) AS NbEvents ' .
            'FROM TIC\PlatformBundle\Entity\events e ' .
            'LEFT JOIN e.session s ' .
            'WHERE s.id = :sessionID';
        $parameters = array(
            'sessionID' => $sessionID
        );
        $qb = $this->getEntityManager()->createQuery($request);
        $qb->setParameters($parameters);
        return $qb->getOneOrNullResult();
    }
}
