<?php

namespace TIC\PlatformBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ContractsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContractsRepository extends EntityRepository
{
    /**
     * @param $clientID
     * @param $contractID
     * @return Contracts
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneWithAll($clientID, $contractID)
    {
        $qb = $this->createQueryBuilder('c')
            ->leftJoin('c.client', 'cc')
            ->addSelect('cc')
            ->where('c.id = :contractID')
            ->andWhere('c.client = :clientID')
            ->setParameters(array(
                'clientID' => $clientID,
                'contractID' => $contractID
            ));

        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * @param $clientID
     * @param $contractID
     * @return Contracts
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findForDelete($clientID, $contractID)
    {
        $qb = $this->createQueryBuilder('c')
            ->leftJoin('c.client', 'cc')
            ->leftJoin('c.sessions', 's')
            ->addSelect('s')
            ->where('c.id = :contractID')
            ->andWhere('cc.id = :clientID')
            ->setParameters(array(
                'clientID' => $clientID,
                'contractID' => $contractID
            ));

        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * @param Clients $client
     * @return Contracts[]
     */
    public function findAllByClient(Clients $client)
    {
        $qb = $this->createQueryBuilder('c')
            ->leftJoin('c.facturationMode', 'f')
            ->addSelect('f')
            ->leftJoin('c.sessions', 's')
            ->addSelect('s')
            ->leftJoin('s.events', 'e')
            ->addSelect('e')
            ->where('c.client = :client')
            ->setParameter('client', $client);

        return $qb->getQuery()->getResult();
    }
}
