<?php

namespace TIC\PlatformBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ClientsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientsRepository extends EntityRepository
{
    /**
     * @param $id
     * @return Clients
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneWithAll($id)
    {
        $qb = $this->createQueryBuilder('c')
            ->leftJoin('c.clientAddresses', 'ca')
            ->addSelect('ca')
            ->leftJoin('ca.address', 'a')
            ->addSelect('a')
            ->leftJoin('a.countries', 'countries')
            ->addSelect('countries')
            ->leftJoin('c.contactPeople', 'cp')
            ->addSelect('cp')
            ->leftJoin('cp.address', 'cpa')
            ->addSelect('cpa')
            ->leftJoin('c.clientCategory', 'cc')
            ->addSelect('cc')
            ->where('c.id = :id')
            ->setParameter('id', $id);

        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * @return Clients[]
     */
    public function findAllWithAll()
    {
        $qb = $this->createQueryBuilder('c')
            ->leftJoin('c.clientCategory', 'cc')
            ->addSelect('cc')
            ->leftJoin('c.clientAddresses', 'ca')
            ->addSelect('ca')
            ->leftJoin('ca.address', 'caa')
            ->addSelect('caa');

        return $qb->getQuery()->getResult();
    }

    /**
     * @param $clientID
     * @return Clients
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findForDelete($clientID)
    {
        $qb = $this->createQueryBuilder('c')
            ->leftJoin('c.contracts', 'cc')
            ->addSelect('cc')
            ->where('c.id = :clientID')
            ->setParameter('clientID', $clientID);

        return $qb->getQuery()->getOneOrNullResult();
    }
}
